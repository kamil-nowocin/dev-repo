name: TEST | Deploy and Trigger Tests

on:
  workflow_dispatch: {}  # Manual trigger
  pull_request:
    types: [labeled]
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  parse-command:
    name: "Parse /run-tests Command"
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.parse.outputs.env }}
      module: ${{ steps.parse.outputs.module }}
      group: ${{ steps.parse.outputs.group }}
      enablePKCE: ${{ steps.parse.outputs.enablePKCE }}
      enableTestRetry: ${{ steps.parse.outputs.enableTestRetry }}
      enableXrayReport: ${{ steps.parse.outputs.enableXrayReport }}
      enableSlackReport: ${{ steps.parse.outputs.enableSlackReport }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: "Install NPM Dependencies"
        run: npm install
        working-directory: .github/scripts

      - name: "Grant execute permission for scripts in .github/scripts"
        run: chmod +x ${{ github.workspace }}/.github/scripts/*
        shell: bash

      - name: "Parse /run-tests command via GitHub Script"
        id: parse
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const manageLabels = require('./.github/scripts/index.js');
            // Call the function and await its result.
            const result = await manageLabels(github, context);
            // Set outputs for downstream jobs.
            core.setOutput('env', result.env);
            core.setOutput('module', result.module);
            core.setOutput('group', result.group);
            core.setOutput('enablePKCE', result.enablePKCE);
            core.setOutput('enableTestRetry', result.enableTestRetry);
            core.setOutput('enableXrayReport', result.enableXrayReport);
            core.setOutput('enableSlackReport', result.enableSlackReport);

  run-regression-tests:
    name: "Build & Execute Tests 🛠️"
    needs: parse-command
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' &&
       github.event.action == 'labeled' &&
       github.event.label.name == 'deploy-with-tests') ||
      ((github.event_name == 'issue_comment' || github.event_name == 'pull_request_review_comment') &&
       startsWith(github.event.comment.body, '/run-tests'))
    uses: "kamil-nowocin/test-repo/.github/workflows/dev-run-tests-workflow.yaml@main"
    with:
      testModule: "${{ needs.parse-command.outputs.module }}"
      testEnvironment: "${{ needs.parse-command.outputs.env }}"
      testGroup: "${{ needs.parse-command.outputs.group }}"
      enablePKCE: ${{ needs.parse-command.outputs.enablePKCE }}
      enableTestRetry: ${{ needs.parse-command.outputs.enableTestRetry }}
      enableXrayReport: ${{ needs.parse-command.outputs.enableXrayReport }}
      enableSlackReport: ${{ needs.parse-command.outputs.enableSlackReport }}
      triggeredFromDevRepo: true
    secrets:
      XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
      XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
      SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      MY_GITHUB_SECRET: ${{ secrets.MY_GITHUB_SECRET }}
