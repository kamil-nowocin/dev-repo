name: TEST | Deploy and Trigger Tests [NEW]

on:
  workflow_dispatch: {}
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  parse-command:
    name: "Parse /run-tests Command"
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.parse.outputs.skip }}
      env: ${{ steps.parse.outputs.env }}
      module: ${{ steps.parse.outputs.module }}
      group: ${{ steps.parse.outputs.group }}
      enablePKCE: ${{ steps.parse.outputs.enablePKCE }}
      enableTestRetry: ${{ steps.parse.outputs.enableTestRetry }}
      enableXrayReport: ${{ steps.parse.outputs.enableXrayReport }}
      enableSlackReport: ${{ steps.parse.outputs.enableSlackReport }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: "Install NPM Dependencies"
        run: npm install
        working-directory: .github/scripts

      - name: "Grant execute permission for scripts in .github/scripts"
        run: chmod +x ${{ github.workspace }}/.github/scripts/*
        shell: bash

      - name: "Parse /run-tests command via GitHub Script"
        id: parse
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: '/.github/scripts/index.js'

  run-regression-tests:
    name: "Build & Execute Tests 🛠️"
    needs: parse-command
    if: >
      (github.eventName == 'workflow_dispatch') || (((github.eventName == 'issue_comment' || github.eventName == 'pull_request_review_comment') && startsWith(github.event.comment.body, '/run-tests')) && (needs.parse-command.outputs.skip != 'true'))
    uses: "kamil-nowocin/test-repo/.github/workflows/dev-run-tests-workflow.yaml@main"
    with:
      testModule: "${{ needs.parse-command.outputs.module }}"
      testEnvironment: "${{ needs.parse-command.outputs.env }}"
      testGroup: "${{ needs.parse-command.outputs.group }}"
      enablePKCE: ${{ needs.parse-command.outputs.enablePKCE }}
      enableTestRetry: ${{ needs.parse-command.outputs.enableTestRetry }}
      enableXrayReport: ${{ needs.parse-command.outputs.enableXrayReport }}
      enableSlackReport: ${{ needs.parse-command.outputs.enableSlackReport }}
#      enablePKCE: ${{ fromJson(needs.parse-command.outputs.enablePKCE) }}
#      enableTestRetry: ${{ fromJson(needs.parse-command.outputs.enableTestRetry) }}
#      enableXrayReport: ${{ fromJson(needs.parse-command.outputs.enableXrayReport) }}
#      enableSlackReport: ${{ fromJson(needs.parse-command.outputs.enableSlackReport) }}
      triggeredFromDevRepo: true
    secrets:
      XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
      XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
      SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
      MY_GITHUB_SECRET: ${{ secrets.MY_GITHUB_SECRET }}
